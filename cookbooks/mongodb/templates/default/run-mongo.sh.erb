#!/bin/bash
set -e
ulimit -n 1024

function mongocmd() 
{
	debug "Executing: $1"
	echo $1 | mongo --quiet
}

function mongoadmin() 
{
	debug "Executing: $1 against the Admin database"
	echo $1 | mongo --quiet admin
}

function isup() 
{
	echo "db.serverStatus()" | mongo --quiet --host $1 | grep -q 'ok'
}

function block_until_isup()
{
	set +e
	while ! isup "$1" >/dev/null 2>&1; do
		debug "Waiting for $1 to come up..."
		sleep 5
	done
	set -e
}

function inreplset()
{
	mongocmd "rs.status()" | grep -q '"name" : "$1"'
}

function replSet_initted()
{
	! mongocmd "rs.status()" | grep "\"info\"" | grep -qv "not yet done for the set"
}

function init_replSet()
{
	if ! replSet_initted; then
		debug "Initialising ReplicaSet..."
		mongocmd "rs.initiate({_id:'<%= @replSet %>',members:[{_id:0,host:'<%= @hostname %>'}]})"
		sleep 2
		debug "ReplicaSet initiated!"
	else
		debug "Replica set already initiated."
	fi
}

function add_replMember()
{
	member="$1"
	if ! inreplset "$1"; then
		debug "Adding $1 to the replica set..." 
		block_until_isup "$member"
		mongocmd "rs.add(\"$member\")"
	else
		debug "$1 is already in the replica set."
	fi
}

function start()
{
	mkdir -p /storage/db
	me="127.0.0.1:27017"

	/opt/mongodb/bin/mongod <%= @cmd %> & 
	parent=$! 

	# Wait until mongo is up...
	block_until_isup "$me" 
<% if !@replSet.nil? and @repl_members.length > 0 %>
	# Do the replica set
	init_replSet
	<% @repl_members.each do |repl| %>
	add_replMember "<%= repl %>"
	<% end %>
<% end %>
}

function stop()
{
	info "Stopping MongoDb..."
	mongoadmin "db.shutdownServer()"
	wait $parent
	exit_code=$?
	info "MongoDb Stopped! Exit code was $exit_code"
	exit $exit_code
}

trap stop TERM INT

start
info "Mongo is good to go."
wait $parent
